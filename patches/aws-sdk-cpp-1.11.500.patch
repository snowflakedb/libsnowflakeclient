Submodule crt/aws-crt-cpp contains modified content
Submodule crt/aws-c-common contains modified content
diff --git a/crt/aws-crt-cpp/crt/aws-c-common/source/json.c b/crt/aws-crt-cpp/crt/aws-c-common/source/json.c
index 2f1630e..f0eb014 100644
--- a/crt/aws-crt-cpp/crt/aws-c-common/source/json.c
+++ b/crt/aws-crt-cpp/crt/aws-c-common/source/json.c
@@ -385,6 +385,7 @@ void aws_json_module_init(struct aws_allocator *allocator) {
 void aws_json_module_cleanup(void) {
     if (s_aws_json_module_initialized) {
         s_aws_json_module_allocator = NULL;
+        cJSON_InitHooks(NULL); // custom change to keep
         s_aws_json_module_initialized = false;
     }
 }
diff --git a/crt/aws-crt-cpp/crt/aws-c-common/source/windows/thread.c b/crt/aws-crt-cpp/crt/aws-c-common/source/windows/thread.c
index 6606c05..2f07baa 100644
--- a/crt/aws-crt-cpp/crt/aws-c-common/source/windows/thread.c
+++ b/crt/aws-crt-cpp/crt/aws-c-common/source/windows/thread.c
@@ -90,6 +90,12 @@ static DWORD WINAPI thread_wrapper_fn(LPVOID arg) {
     bool is_managed_thread = wrapper_ptr->thread_copy.detach_state == AWS_THREAD_MANAGED;
     if (!is_managed_thread) {
         aws_mem_release(allocator, arg);
+        /*
+         * SNOW-2111927 custom changes to keep, fixing thread handle leak .
+         * For threads manually joined, close the thread handle in wrapper before
+         * releasing it.
+         */
+        aws_thread_clean_up(&wrapper_ptr->thread_copy);
     }

     struct thread_atexit_callback *exit_callback_data = thread_wrapper.atexit;
