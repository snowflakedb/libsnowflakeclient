#set($signPayloadsOptional = true)
#set($doNotDoubleUrlEncode = true)
#set($virtualAddressingSupported = true)
#parse("com/amazonaws/util/awsclientgenerator/velocity/cpp/xml/rest/RestXmlServiceClientSource.vm")

Aws::String ${className}::GeneratePresignedUrl(const Aws::String& bucketName, const Aws::String& key, Http::HttpMethod method, long long expirationInSeconds)
{
    Aws::StringStream ss;
    ss << ComputeEndpointString(bucketName) << "/" << key;
    URI uri(ss.str());
    return AWSClient::GeneratePresignedUrl(uri, method, expirationInSeconds);
}

Aws::String ${className}::ComputeEndpointString(const Aws::String& bucket) const
{
    Aws::StringStream ss;
    // when using virtual hosting of buckets, the bucket name has to follow some rules.
    // Mainly, it has to be a valid DNS label, and it must be lowercase.
    // For more information see http://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html#VirtualHostingSpecifyBucket
    if(m_useVirtualAdressing && Aws::Utils::IsValidDnsLabel(bucket) && 
            bucket == Aws::Utils::StringUtils::ToLower(bucket.c_str())) 
    {
        ss << m_scheme << "://" << bucket << "." << m_baseUri;
    }
    else
    {
        ss << m_scheme << "://" << m_baseUri << "/" << bucket;
    }
    return ss.str();
}

Aws::String ${className}::ComputeEndpointString() const
{
    Aws::StringStream ss;
    ss << m_scheme << "://" << m_baseUri;
    return ss.str();
}

bool ${className}::MultipartUploadSupported() const
{
    return true;
}
