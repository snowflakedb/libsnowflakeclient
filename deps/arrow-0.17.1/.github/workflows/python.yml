# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Python

on:
  push:
    paths:
      - '.github/workflows/python.yml'
      - 'ci/**'
      - 'cpp/**'
      - 'python/**'
  pull_request:
    paths:
      - '.github/workflows/python.yml'
      - 'ci/**'
      - 'cpp/**'
      - 'python/**'

env:
  DOCKER_BUILDKIT: 0
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:

  ubuntu:
    name: AMD64 Ubuntu 16.04 Python 3.5
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}
    env:
      UBUNTU: 16.04
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch Submodules and Tags
        shell: bash
        run: ci/scripts/util_checkout.sh
      - name: Docker Pull
        shell: bash
        run: |
          docker-compose pull --ignore-pull-failures ubuntu-cpp
          docker-compose pull --ignore-pull-failures ubuntu-python
      - name: Docker Build
        shell: bash
        run: |
          docker-compose build ubuntu-cpp
          docker-compose build ubuntu-python
      - name: Docker Run
        shell: bash
        run: docker-compose run ubuntu-python
      - name: Docker Push
        if: success() && github.event_name == 'push' && github.repository == 'apache/arrow'
        continue-on-error: true
        shell: bash
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USER }} \
                       -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker-compose push ubuntu-python

  conda-nopandas:
    name: AMD64 Conda Python ${{ matrix.python }} Without Pandas
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}
    strategy:
      fail-fast: false
      matrix:
        python: [3.6]
    env:
      PYTHON: ${{ matrix.python }}
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch Submodules and Tags
        shell: bash
        run: ci/scripts/util_checkout.sh
      - name: Docker Pull
        shell: bash
        run: |
          docker-compose pull --ignore-pull-failures conda-cpp
          docker-compose pull --ignore-pull-failures conda-python
      - name: Docker Build
        shell: bash
        run: |
          docker-compose build conda-cpp
          docker-compose build conda-python
      - name: Docker Run
        shell: bash
        run: docker-compose run conda-python
      - name: Docker Push
        if: success() && github.event_name == 'push' && github.repository == 'apache/arrow'
        continue-on-error: true
        shell: bash
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USER }} \
                       -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker-compose push conda-python

  conda-pandas:
    name: AMD64 Conda Python ${{ matrix.python }} Pandas ${{ matrix.pandas }}
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}
    strategy:
      fail-fast: false
      matrix:
        python: [3.8]
        pandas: ["latest"]
    env:
      PYTHON: ${{ matrix.python }}
      PANDAS: ${{ matrix.pandas }}
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch Submodules and Tags
        shell: bash
        run: ci/scripts/util_checkout.sh
      - name: Docker Pull
        shell: bash
        run: |
          docker-compose pull --ignore-pull-failures conda-cpp
          docker-compose pull --ignore-pull-failures conda-python
          docker-compose pull --ignore-pull-failures conda-python-pandas
      - name: Docker Build
        shell: bash
        run: |
          docker-compose build conda-cpp
          docker-compose build conda-python
          docker-compose build conda-python-pandas
      - name: Docker Run
        shell: bash
        run: |
          docker-compose run conda-python-pandas
      - name: Docker Push
        if: success() && github.event_name == 'push' && github.repository == 'apache/arrow'
        continue-on-error: true
        shell: bash
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USER }} \
                       -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker-compose push conda-python-pandas

  macos:
    name: AMD64 MacOS 10.15 Python 3.7
    runs-on: macos-latest
    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}
    env:
      ARROW_HOME: /usr/local
      ARROW_DATASET: ON
      ARROW_JEMALLOC: ON
      ARROW_ORC: ON
      ARROW_PYTHON: ON
      ARROW_PLASMA: ON
      ARROW_GANDIVA: ON
      ARROW_PARQUET: ON
      ARROW_WITH_ZLIB: ON
      ARROW_WITH_LZ4: ON
      ARROW_WITH_BZ2: ON
      ARROW_WITH_ZSTD: ON
      ARROW_WITH_SNAPPY: ON
      ARROW_WITH_BROTLI: ON
      ARROW_BUILD_TESTS: OFF
      CMAKE_ARGS: "-DPYTHON_EXECUTABLE=/usr/local/bin/python3"
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch Submodules and Tags
        shell: bash
        run: ci/scripts/util_checkout.sh
      - name: Install Dependencies
        shell: bash
        run: |
          brew bundle --file=cpp/Brewfile
          brew install coreutils python
          pip3 install -r python/requirements-build.txt \
                       -r python/requirements-test.txt
      - name: Build
        shell: bash
        run: |
          export PYTHON=python3
          ci/scripts/cpp_build.sh $(pwd) $(pwd)/build
          ci/scripts/python_build.sh $(pwd) $(pwd)/build
      - name: Test
        shell: bash
        run: ci/scripts/python_test.sh $(pwd) $(pwd)/build

  manylinux1:
    name: AMD64 CentOS 5.11 Python 3.6 manylinux1
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch Submodules and Tags
        shell: bash
        run: ci/scripts/util_checkout.sh
      - name: Docker Pull
        shell: bash
        run: docker-compose pull centos-python-manylinux1
      - name: Docker Run
        shell: bash
        run: |
          sudo sysctl -w kernel.core_pattern="core.%e.%p"
          ulimit -c unlimited
          docker-compose run centos-python-manylinux1
