jobs:
- job: linux
  pool:
    vmImage: ubuntu-16.04
  timeoutInMinutes: 360

  variables:
    CONFIG: {{ config }}
    ARROW_VERSION: {{ arrow.no_rc_version }}
    DOCKER_IMAGE: condaforge/linux-anvil-comp7
    UPLOAD_PACKAGES: False

  steps:
  # configure qemu binfmt-misc running.  This allows us to run docker containers
  # embedded qemu-static
  - script: |
      docker run --rm --privileged multiarch/qemu-user-static:register --reset --credential yes
      ls /proc/sys/fs/binfmt_misc/
    displayName: Configure binfmt_misc
    condition: not(startsWith(variables['CONFIG'], 'linux_64'))

  - script: |
      git clone --no-checkout {{ arrow.remote }} arrow
      git -C arrow fetch -t {{ arrow.remote }} {{ arrow.branch }}
      git -C arrow checkout FETCH_HEAD
      git -C arrow submodule update --init --recursive
    displayName: Clone arrow

  - script: |
      mkdir build_artifacts
      CI=azure arrow/dev/tasks/conda-recipes/run_docker_build.sh $(pwd)/build_artifacts
    displayName: Run docker build

  # Using github release tries to find a common ancestor between the
  # currently pushed tag and the latest tag of the github repository
  # (don't know why).
  # The tag upload took 43 minutes because of this scan, so use an
  # alternative upload script.
  - task: CondaEnvironment@1
    inputs:
      packageSpecs: 'click github3.py jinja2 jira pygit2 ruamel.yaml setuptools_scm toolz anaconda-client'
      installOptions: '-c conda-forge'
      updateConda: false

  # Upload to github releases
  - script: |
      python arrow/dev/tasks/crossbow.py \
        --queue-path . \
        --queue-remote {{ queue_remote_url }} \
        upload-artifacts \
        --sha {{ task.branch }} \
        --tag {{ task.tag }} \
        --pattern "build_artifacts/linux-64/*.tar.bz2"
    env:
      CROSSBOW_GITHUB_TOKEN: $(CROSSBOW_GITHUB_TOKEN)
    displayName: Upload packages as a GitHub release

  {% if arrow.branch == 'master' %}
  # Upload to custom anaconda channel
  - script: |
      anaconda -t $(CROSSBOW_ANACONDA_TOKEN) upload --force build_artifacts/linux-64/*.tar.bz2
    displayName: Upload packages to Anaconda
  {% endif %}
