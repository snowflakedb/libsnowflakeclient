# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

version: 2
jobs:
  build:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - run: docker -v
      - run: docker-compose -v
      {% if arrow.branch == "master" %}
      - run: |
          if [ -n $DOCKER_USER ] && [ -n $DOCKER_PASS ]; then
            docker login -u $DOCKER_USER -p $DOCKER_PASS
          fi
      {% endif %}
      - run: git clone --no-checkout {{ arrow.remote }} arrow
      - run: git -C arrow fetch -t {{ arrow.remote }} {{ arrow.branch }}
      - run: git -C arrow checkout FETCH_HEAD
      - run: git -C arrow submodule update --init --recursive
      - run:
          command: |
            pushd arrow
            {% if env is defined %}
            {%- for key, value in env.items() %}
              export {{ key }}={{ value }}
            {%- endfor %}
            {% endif %}

            {% if build is defined %}
            {%- for image in build %}
              docker-compose pull --ignore-pull-failures {{ image }}
              docker-compose build {{ image }}
            {%- endfor %}
            {% endif %}

            {% if nocache is defined %}
            {%- for image in nocache %}
              docker-compose build --no-cache {{ image }}
            {%- endfor %}
            {% endif %}

            {%- for image in run %}
              docker-compose run --rm -e SETUPTOOLS_SCM_PRETEND_VERSION="{{ arrow.no_rc_version }}" {{ image }}
            {%- endfor %}
            popd
          no_output_timeout: "1h"

workflows:
  version: 2
  build:
    jobs:
      - build
