# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

os: Visual Studio 2015

environment:
  ARCH: "64"
  GENERATOR: Visual Studio 14 2015 Win64
  PYTHON_VERSION: "{{ python_version }}"
  PYTHON_INTERPRETER: {{ python_interpreter }}
  ARROW_SRC: C:\apache-arrow
  PYARROW_VERSION: {{ arrow.no_rc_version }}

init:
  - set MINICONDA=C:\Miniconda3-x64
  - set PATH=%MINICONDA%;%MINICONDA%/Scripts;%MINICONDA%/Library/bin;%PATH%

build_script:
  - mkdir wheels
  - git config core.symlinks true

  - git clone --no-checkout {{ arrow.remote }} %ARROW_SRC% || exit /B
  - git -C %ARROW_SRC% fetch -t {{ arrow.remote }} {{ arrow.branch }} || exit /B
  - git -C %ARROW_SRC% checkout FETCH_HEAD || exit /B
  - git -C %ARROW_SRC% submodule update --init || exit /B

  # Avoid picking up AppVeyor-installed OpenSSL (linker errors with gRPC)
  # XXX Perhaps there is a smarter way of solving this issue?
  - rd /s /q C:\OpenSSL-Win32
  - rd /s /q C:\OpenSSL-Win64
  - rd /s /q C:\OpenSSL-v11-Win32
  - rd /s /q C:\OpenSSL-v11-Win64
  - rd /s /q C:\OpenSSL-v111-Win32
  - rd /s /q C:\OpenSSL-v111-Win64

  # Disable vcpkg to prevent unrelated noisy link warnings
  - vcpkg integrate remove

  - call %ARROW_SRC%\dev\tasks\python-wheels\{{ script }}

after_build:
  # the artifacts must be uploaded from a directory relative to the build root
  - xcopy %ARROW_SRC%\python\dist\* wheels\
{% if arrow.branch == 'master' %}
  # upload to gemfury
  - conda install -y curl
  - for /f %%i in ('dir /b wheels\*.whl') do set WHEEL_PATH=wheels\%%i
  - curl.exe -F "package=@%WHEEL_PATH%" "https://%CROSSBOW_GEMFURY_TOKEN%@push.fury.io/%CROSSBOW_GEMFURY_ORG%/"
{% endif %}

#on_finish:
  #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

artifacts:
  - path: 'wheels\*.whl'

deploy:
  release: {{ task.tag }}
  provider: GitHub
  auth_token: "%CROSSBOW_GITHUB_TOKEN%"
  artifact: /.*\.whl/
  draft: false
  prerelease: false
