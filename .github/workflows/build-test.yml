name: Build and Test

on: push

jobs:
    build-test:
        name: Build-Test
        runs-on: windows-2019
        strategy:
            matrix:
                platform: [ 'x64', 'x86' ]
                build_type: [ 'Debug', 'Release' ]
                vs_version: [ 'VS16' ]
                cloud_provider: [ 'AWS', 'AZURE', 'GCP' ]
        steps:
            - uses: actions/checkout@v1
            - name: Build zlib
              shell: cmd
              env:
                  PLATFORM: ${{ matrix.platform }}
                  BUILD_TYPE: ${{ matrix.build_type }}
                  VS_VERSION: ${{ matrix.vs_version }}
              run: scripts\build_zlib.bat :build %PLATFORM% %BUILD_TYPE% %VS_VERSION%
            - name: Build openssl
              shell: cmd
              env:
                  PLATFORM: ${{ matrix.platform }}
                  BUILD_TYPE: ${{ matrix.build_type }}
                  VS_VERSION: ${{ matrix.vs_version }}
              run: scripts\build_openssl.bat :build %PLATFORM% %BUILD_TYPE% %VS_VERSION%
            - name: Build curl
              shell: cmd
              env:
                  PLATFORM: ${{ matrix.platform }}
                  BUILD_TYPE: ${{ matrix.build_type }}
                  VS_VERSION: ${{ matrix.vs_version }}
              run: scripts\build_curl.bat :build %PLATFORM% %BUILD_TYPE% %VS_VERSION%
            - name: Build awssdk
              shell: cmd
              env:
                  PLATFORM: ${{ matrix.platform }}
                  BUILD_TYPE: ${{ matrix.build_type }}
                  VS_VERSION: ${{ matrix.vs_version }}
              run: scripts\build_awssdk.bat :build %PLATFORM% %BUILD_TYPE% %VS_VERSION%
            - name: Build azuresdk
              shell: cmd
              env:
                  PLATFORM: ${{ matrix.platform }}
                  BUILD_TYPE: ${{ matrix.build_type }}
                  VS_VERSION: ${{ matrix.vs_version }}
              run: scripts\build_azuresdk.bat :build %PLATFORM% %BUILD_TYPE% %VS_VERSION%
            - name: Build cmocka
              shell: cmd
              env:
                  PLATFORM: ${{ matrix.platform }}
                  BUILD_TYPE: ${{ matrix.build_type }}
                  VS_VERSION: ${{ matrix.vs_version }}
              run: scripts\build_cmocka.bat :build %PLATFORM% %BUILD_TYPE% %VS_VERSION%
            - name: Build libsnowflakeclient
              shell: cmd
              env:
                  PLATFORM: ${{ matrix.platform }}
                  BUILD_TYPE: ${{ matrix.build_type }}
                  VS_VERSION: ${{ matrix.vs_version }}
              run: scripts\build_libsnowflakeclient.bat :build %PLATFORM% %BUILD_TYPE% %VS_VERSION% OFF ON
            - uses: actions/setup-python@v1
              with:
                python-version: '3.7'
                architecture: 'x64'
            - name: Test
              shell: cmd
              env:
                  PLATFORM: ${{ matrix.platform }}
                  BUILD_TYPE: ${{ matrix.build_type }}
                  VS_VERSION: ${{ matrix.vs_version }}
                  CLOUD_PROVIDER: ${{ matrix.cloud_provider }}
              run: ci\test.bat